"""first migration

Revision ID: 1d56a0bf646e
Revises: 
Create Date: 2022-05-07 18:57:12.760466

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '1d56a0bf646e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cell_lines',
    sa.Column('cellosaurus_id', sa.String(length=64), nullable=False),
    sa.Column('cellosaurus_index', sa.String(length=64), nullable=True),
    sa.Column('ccle_name', sa.String(length=64), nullable=True),
    sa.Column('ctrp1_name', sa.String(length=64), nullable=True),
    sa.Column('ctrp2_name', sa.String(length=64), nullable=True),
    sa.Column('gdsc1_name', sa.String(length=64), nullable=True),
    sa.Column('gdsc2_name', sa.String(length=64), nullable=True),
    sa.Column('site', sa.String(length=128), nullable=True),
    sa.PrimaryKeyConstraint('cellosaurus_id')
    )
    op.create_table('drugs',
    sa.Column('standard_drug_name', sa.String(length=64), nullable=False),
    sa.Column('synonyms', sa.String(length=128), nullable=True),
    sa.Column('target', sa.String(length=64), nullable=True),
    sa.Column('pathway', sa.String(length=256), nullable=True),
    sa.Column('ccle_drug_name', sa.String(length=64), nullable=True),
    sa.Column('ctrp1_drug_name', sa.String(length=64), nullable=True),
    sa.Column('ctrp2_drug_name', sa.String(length=64), nullable=True),
    sa.Column('gdsc1_drug_name', sa.String(length=64), nullable=True),
    sa.Column('gdsc2_drug_name', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('standard_drug_name')
    )
    op.create_table('genes',
    sa.Column('gene_name', sa.String(length=64), nullable=False),
    sa.PrimaryKeyConstraint('gene_name')
    )
    op.create_table('drug_similarities',
    sa.Column('drug_x', sa.String(length=64), nullable=False),
    sa.Column('drug_y', sa.String(length=64), nullable=False),
    sa.Column('similarity', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['drug_x'], ['drugs.standard_drug_name'], ),
    sa.ForeignKeyConstraint(['drug_y'], ['drugs.standard_drug_name'], ),
    sa.PrimaryKeyConstraint('drug_x', 'drug_y')
    )
    op.create_table('experiments',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('cellosaurus_id', sa.String(length=64), nullable=False),
    sa.Column('standard_drug_name', sa.String(length=64), nullable=False),
    sa.Column('dataset', sa.String(length=32), nullable=False),
    sa.Column('info', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['cellosaurus_id'], ['cell_lines.cellosaurus_id'], ),
    sa.ForeignKeyConstraint(['standard_drug_name'], ['drugs.standard_drug_name'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('gene_expressions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('standard_drug_name', sa.String(length=64), nullable=True),
    sa.Column('gene', sa.String(length=64), nullable=True),
    sa.Column('dataset', sa.String(length=32), nullable=True),
    sa.Column('cancer_type', sa.String(length=64), nullable=True),
    sa.Column('pvalue', sa.Float(), nullable=True),
    sa.Column('correlation', sa.Float(), nullable=True),
    sa.Column('provided_pvalue', sa.Float(), nullable=True),
    sa.Column('provided_correlation', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['gene'], ['genes.gene_name'], ),
    sa.ForeignKeyConstraint(['standard_drug_name'], ['drugs.standard_drug_name'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('gene_similarities',
    sa.Column('gene_x', sa.String(length=64), nullable=False),
    sa.Column('gene_y', sa.String(length=64), nullable=False),
    sa.Column('similarity', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['gene_x'], ['genes.gene_name'], ),
    sa.ForeignKeyConstraint(['gene_y'], ['genes.gene_name'], ),
    sa.PrimaryKeyConstraint('gene_x', 'gene_y')
    )
    op.create_table('mutations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('standard_drug_name', sa.String(length=64), nullable=True),
    sa.Column('gene', sa.String(length=64), nullable=True),
    sa.Column('dataset', sa.String(length=32), nullable=True),
    sa.Column('cancer_type', sa.String(length=64), nullable=True),
    sa.Column('pvalue', sa.Float(), nullable=True),
    sa.Column('statistic', sa.Float(), nullable=True),
    sa.Column('provided_pvalue', sa.Float(), nullable=True),
    sa.Column('provided_statistic', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['gene'], ['genes.gene_name'], ),
    sa.ForeignKeyConstraint(['standard_drug_name'], ['drugs.standard_drug_name'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dose_responses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('dosage', sa.Float(), nullable=True),
    sa.Column('response', sa.Float(), nullable=True),
    sa.Column('exp_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['exp_id'], ['experiments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('jags_samplings',
    sa.Column('exp_id', sa.Integer(), nullable=False),
    sa.Column('n_dosage', sa.Integer(), nullable=True),
    sa.Column('min_dosage', sa.Float(), nullable=True),
    sa.Column('max_dosage', sa.Float(), nullable=True),
    sa.Column('beta0_mode', sa.Float(), nullable=True),
    sa.Column('beta0_HDI_low', sa.Float(), nullable=True),
    sa.Column('beta0_HDI_high', sa.Float(), nullable=True),
    sa.Column('beta1_mode', sa.Float(), nullable=True),
    sa.Column('beta0_jags_str', sa.Text(), nullable=True),
    sa.Column('beta1_jags_str', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['exp_id'], ['experiments.id'], ),
    sa.PrimaryKeyConstraint('exp_id')
    )
    op.create_table('provided_sensitivity_scores',
    sa.Column('exp_id', sa.Integer(), nullable=False),
    sa.Column('ic50_provided', sa.Float(), nullable=True),
    sa.Column('auc_provided', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['exp_id'], ['experiments.id'], ),
    sa.PrimaryKeyConstraint('exp_id')
    )
    op.create_table('sensitivity_scores',
    sa.Column('exp_id', sa.Integer(), nullable=False),
    sa.Column('ic50_HDI_low', sa.Float(), nullable=True),
    sa.Column('ic50_HDI_high', sa.Float(), nullable=True),
    sa.Column('ic50_mode', sa.Float(), nullable=True),
    sa.Column('ic90_calculate', sa.Float(), nullable=True),
    sa.Column('ec50_calculate', sa.Float(), nullable=True),
    sa.Column('einf_calculate', sa.Float(), nullable=True),
    sa.Column('auc_calculate', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['exp_id'], ['experiments.id'], ),
    sa.PrimaryKeyConstraint('exp_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('sensitivity_scores')
    op.drop_table('provided_sensitivity_scores')
    op.drop_table('jags_samplings')
    op.drop_table('dose_responses')
    op.drop_table('mutations')
    op.drop_table('gene_similarities')
    op.drop_table('gene_expressions')
    op.drop_table('experiments')
    op.drop_table('drug_similarities')
    op.drop_table('genes')
    op.drop_table('drugs')
    op.drop_table('cell_lines')
    # ### end Alembic commands ###
